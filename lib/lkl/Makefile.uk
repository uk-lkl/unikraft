$(eval $(call addlib_s,liblkl,$(CONFIG_LIBLKL)))

ifeq ($(BUILD_VERBOSE),1)
  $(eval LKL_VERBOSE := "V=1")
else
  $(eval LKL_VERBOSE := "V=0")
endif
$(eval LKL_SRCDIR := $(LIBLKL_BASE)/linux/tools/lkl)
$(eval LKL_OUTPUT := $(LIBLKL_BUILD)/linux)

$(LIBLKL_BUILD)/lkl.o:
	mkdir -p $(LKL_OUTPUT)/tools/lkl
	$(MAKE) -C $(LKL_SRCDIR) \
	  $(LKL_OUTPUT)/tools/lkl/lib/lkl.o \
	  CROSSCOMPILE=$(CONFIG_CROSS_COMPILE) \
	  $(LKL_VERBOSE) \
	  OUTPUT=$(LKL_OUTPUT)/tools/lkl/ \
	  O=$(LKL_OUTPUT)/
	cp $(LKL_OUTPUT)/tools/lkl/lib/lkl.o $(LIBLKL_BUILD)/lkl.o

$(eval LIBLKL_OBJS-$(CONFIG_LIBLKL) += $(LIBLKL_BUILD)/lkl.o)

CINCLUDES-$(CONFIG_LIBLKL)	+= -I$(LKL_SRCDIR)/include
CINCLUDES-$(CONFIG_PLAT_LINUXU)	+= -I$(LIBLINUXUPLAT_BASE)/include
CINCLUDES-$(CONFIG_PLAT_LINUXU)	+= -I$(UK_PLAT_COMMON_BASE)/include

LIBLKL_CFLAGS-y += -D__FIBER__

# LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/config.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/dbg.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/dbg_handler.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/fs.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/iomem.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/jmp_buf.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/net.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/uk-host.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/utils.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/virtio.c
# LIBLKL_SRCS-y += $(LKL_SRCDIR)/../perf/pmu-events/jsmn.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/arch_asm.S
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/arch_fpu.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/arch_thread.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/debug.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/heap.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/kernel/event.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/kernel/mutex.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/kernel/semaphore.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/kernel/thread.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/kernel/timer.c
LIBLKL_SRCS-y += $(LKL_SRCDIR)/lib/lk/platform/posix/posix-timer.c
